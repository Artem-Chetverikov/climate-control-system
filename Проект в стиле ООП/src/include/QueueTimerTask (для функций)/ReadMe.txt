QueueTimerTask 

Очередь задач с приоритетами и асинхронный таймер для постановки в очередь либо непосредственное выполнение


Пример:
#include "QueueTimerTask.h"


//Таймерные задачи очередные(ставит в ОЧЕРЕДЬ диспетчера задач по истечении таймера): TimerList.Add(функция, приоритет, время);

TimerList.Add(func_a, 1, 1000);
TimerList.Add(func_b, 2, 5000);



//Таймерные задачи срочные(НЕ добавляет в диспетчер задач, а сразу исполняет по истечении таймера): TimerList.Add(функция, время);
TimerList.Add(func_a, 1000);
TimerList.Add(func_b, 5000);
TimerList.Add(func_c, 500);

TimerList.Add(func_c, 0, 500);	// с нулевым приоритетом в диспетчер задач не попадает, а исполняется по истечении таймера


TimerList.Step();		// должен находится в обработчике прерываний таймера 
						// с настройкой срабатывания каждую 1 мс( по умолчанию в  ISR(TIMER2_COMPA_vect) )


//Постановка непосредственно в очередь задач (чем больше число, тем выше приоритет):QueueList.Add(функция,приоритет);

QueueList.Add(func_a,2);
QueueList.Add(func_a,1);


QueueList.Step();		// должно выполнятся периодически (в цикле или по таймеру; за один вызов выполняется одна запланированная задача из очереди)



------------------------------------------------------------------




Протестировано 15.05.2020 - успешно.